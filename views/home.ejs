<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home | Page</title>
  <link rel="stylesheet" href="style.css">
  <style>
    @media screen and (max-width: 400px) {
      body {
        width: 100%;
      }

      .navbar {
        display: block;
        margin: 0 20px;
      }

      .motive {
        display: block;
      }

      .box1 {
        padding: 1em;
        width: 100%;
      }


      img {
        padding: 1em;
      }

      .header1 {
        margin-top: -239px;
      }
    }

    @media screen and (max-width: 700px) {}

    @media screen and (min-width: 900px) {}
  </style>

</head>

<body>
  <div class="box">
    <video autoplay muted loop id="myVideo">
      <source src="/images/bkvideo.mp4" type="video/mp4">
    </video>
    <h1 class="header1">THE GREAT LIBRARY OF <br> ALEXANDRIA</h1>
  </div>
  <div class="nav">
    <nav>
      <ul class="navbar">



        <% if (user) { %>
          <li>Welcome ,<%= user.name %>
          </li>
          <li><a href="/dashboard">dashboard</a></li>
          <li class="out"><a href="/logout">logout</a></li>

          <% } else { %>

            <li><a href="/login">Login as user</a></li>

            <% } %>

              <li><a href="/adlogin">Login As Admin</a></li>

              <li><a href="#1">About Us</a></li>
              <li><a href="/help">Help</a></li>
      </ul>
    </nav>
  </div>
  <div class="motive">
    <div class="box1">
      <h1>OUR MOTIVE</h1>
      <p class="p1"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; We are in the brink of
        time
        where managing
        one's own things itself so difficult. Then consider that of an entire renowed library. With lack of
        workforce it
        was indeed very difficult to have managed. Thus we the founders of 3ppleLife have come up with a library
        Management System that works and feels like an user belongs among books.
      </p>
      <p class="p1"> We the founders of 3ppleLife have developed this website to make it a bridge between the use of
        technology to change traditional methods and ways of Management. We provide an online experience like no other
        for each
        user
        to follow and search for any necessities among books that they require.
      </p>
    </div>
    <div>
      <img class="img1" src="/images/aim4.jfif" alt="">
    </div>
  </div>
  <div class="project">
    <div class="box2">
      <h1>ABOUT OUR PROJECT</h1>
      <p class="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Our team took up this
        project
        to create an efficient Library Management System where the user feels
        excited to use it and is inspired by the content and efforts taken by us. Managing a Library
        physically
        was a tedious job for the librarian. Hence we have made it easier for both the librarian as well as the users of
        the library.</p>
      <p class="p1">Our entire website consists of both a retro ancient look as well as a modern futuristic look. We
        have considered it to be a dual version of a single website to give users a taste of both the past and the
        future. Every page of this website is designed and developed with the atmost care to create the best webpage
        possible.</p>
      <p class="p1">The Services of AWS used in our website are Amazon Elastic Beanstalk and AWS Code Pipeline for
        hosting
        purpose.</p>
      <p class="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AWS Elastic Beanstalk is an
        easy-to-use service for deploying and scaling web applications and services developed with Java, .NET, PHP,
        Node.js, Python, Ruby, Go, and Docker on familiar servers such as Apache, Nginx, Passenger, and IIS.

        You can simply upload your code and Elastic Beanstalk automatically handles the deployment, from capacity
        provisioning, load balancing, auto-scaling to application health monitoring. At the same time, you retain full
        control over the AWS resources powering your application and can access the underlying resources at any time.

        There is no additional charge for Elastic Beanstalk - you pay only for the AWS resources needed to store and run
        your applications.</p>
      <p class="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AWS Code Pipeline is a web
        service that helps you reliably process and move data between different AWS compute and storage services, as
        well as on-premises data sources, at specified intervals. With AWS Data Pipeline, you can regularly access your
        data where it’s stored, transform and process it at scale, and efficiently transfer the results to AWS services
        such as Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon EMR.</p>
      <p class="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AWS Code Pipeline helps you
        easily create complex data processing workloads that are fault tolerant, repeatable,
        and highly available. You don’t have to worry about ensuring resource availability, managing inter-task
        dependencies, retrying transient failures or timeouts in individual tasks, or creating a failure notification
        system. AWS Data Pipeline also allows you to move and process data that was previously locked up in on-premises
        data silos.</p>

    </div>
    <div class="aboutus">
      <div class="box3" id="1">
        <h1>About Us</h1>
        <p class="p1">The main features that our project consists are User Register and Login, Admin Login, Issuing
          a
          Book.</p>
        <div class="box3">
          <h2>User Signup</h2>
          <p class="p1">Register a new user to the system. Check's the email address if it's already registered to
            the
            system. Check's if all mandatory fields are filled out. User details will be stored in our database
          </p>
        </div>
        <div class="box3">
          <h2>User Login</h2>
          <p class="p1">Check's the email and password accurately. Consist's of dashboard and profile view of a
            user.
            Retrives the user's data from database.
          </p>
        </div>
        <div class="box3">
          <h2>Admin Login</h2>
          <p class="p1">Consist's of dashboard and profile view of a admin. Check the details of user's.
          </p>
        </div>
        <div class="box3">
          <h2>Front-End And Backend Design</h2>
          <p class="p1">The languages used to built our project are HTML5, CSS, JavaScript for Front-end and
            Back-end
            design is implemented using MongoDb, NodeJS, ExpressJS. </p>
        </div>
        <div class="box3">
          <h2>Admin Functionality</h2>
          <p class="p1">The admin has access to all the data already available on the website and can influence it by
            adding additional contents as well as removing them. </p>
        </div>
      </div>
    </div>
  </div>
  <footer>

  </footer>
</body>

</html>